@charset "UTF-8";.field-list{margin:0;padding:0;list-style:none}.j-topic-dropdown .field-list,.j-topic-grid .field-list{display:flex;flex-direction:column;gap:1.5rem;padding:0 2.125rem;margin:0 -2.125rem}@media (min-width:700px){.j-topic-dropdown .field-list,.j-topic-grid .field-list{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));gap:0 1.5rem}}@media (min-width:1000px){.j-topic-dropdown .field-list,.j-topic-grid .field-list{grid-template-columns:repeat(12,minmax(0,1fr))}}.j-topic-dropdown .field-list,.j-topic-grid .field-list{row-gap:1.5rem}.j-topic-dropdown .field-list li,.j-topic-grid .field-list li{display:flex;flex-direction:column;justify-content:stretch}.j-topic-grid .field-list>li{grid-column:span 6}.j-topic-dropdown .field-list{padding-top:2rem;padding-bottom:2rem}.j-topic-dropdown .field-list>li{grid-column:span 6}@media (min-width:1000px){.j-topic-dropdown .field-list>li{grid-column:span 4}}@media (min-width:1200px){.j-topic-dropdown .field-list>li{grid-column:span 4}}@media (min-width:1000px){.j-topic-dropdown .field-list.field-list--less-than-3 li{grid-column:span 6}}.j-card-grid .field-list{display:flex;flex-direction:column;gap:1.5rem}@media (min-width:700px){.j-card-grid .field-list{flex-direction:row;flex-wrap:wrap}}@media (min-width:700px){.j-card-grid .field-list>li{flex-basis:calc(50% - 0.75rem);width:calc(50% - .75rem)}}@media (min-width:1000px){.j-card-grid .field-list>li{flex-basis:calc(33% - 0.9375rem);width:calc(33% - .9375rem)}}@media (min-width:1200px){.j-card-grid .field-list>li{flex-basis:calc(25% - 1.125rem);width:calc(25% - 1.125rem)}}.teaser-listing{margin:0;padding:0;list-style:none}.teaser-listing li{margin:0 0 1.5rem;padding:0}.text-teaser{margin-bottom:2rem}.text-teaser__heading{font-size:var(--jupiter__font__size--lg,20px);line-height:var(--jupiter__lineHeight--xs,1.3333)}@media (min-width:1000px){.text-teaser__heading{font-size:var(--jupiter__font__size--xl,24px)}}.text-teaser__body,.text-teaser__heading{margin-bottom:0}body{min-height:100%}.dialog-off-canvas-main-canvas,.j-chrome-content-container,.main-content,.portal-content-area,.pvof-doc__content-wrapper,.pvof-doc__content-wrapper__inner,.pvof-doc__content-wrapper__outer,.top-page-wrap[class]{flex-grow:1}.dialog-off-canvas-main-canvas,.j-chrome-content-container,.main-content,.page-wrap,.portal-content-area,.pvof-doc__content-wrapper,.pvof-doc__content-wrapper__outer,.top-page-wrap,body{display:flex;flex-direction:column}.top-page-wrap[class]{min-height:0}.sr-only{position:absolute;overflow:hidden;clip:rect(0,0,0,0);width:.0625rem;height:.0625rem;padding:0;border:0;white-space:nowrap;-webkit-clip-path:inset(50%);clip-path:inset(50%)}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;overflow:visible;clip:auto;width:auto;height:auto;white-space:normal;-webkit-clip-path:none;clip-path:none}#consent_blackbar{z-index:20}.j-superdoc__product-title[class],.u-j-secondary-section-heading{font-size:1.25rem;line-height:1.323;font-family:var(--jupiter__font__family--title,"Red Hat Display",RedHatDisplay,Inter,-apple-system,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif);font-weight:500;text-transform:uppercase}.cp-subnav[class]{position:fixed;right:0;bottom:0;left:0;margin:0;padding:0;background:#eee}.nav-faux-tabs[class]{margin:0}#toolbar-administration{position:absolute;top:0;width:100%;height:4.9375rem}body.toolbar-icon-9.toolbar-tray-open.toolbar-horizontal{padding-top:4.9375rem}body.toolbar-fixed .toolbar-bar[class][class][class]{position:absolute;width:100%}.toolbar-horizontal .toolbar-tray[class]{position:absolute}#admin-toolbar-search-tab{display:none}body.toolbar-fixed.toolbar-vertical .toolbar-bar[class][class][class]{position:fixed}@-webkit-keyframes fade-in{0%{visibility:hidden;opacity:0}1%{visibility:visible}to{visibility:visible;opacity:1}}@keyframes fade-in{0%{visibility:hidden;opacity:0}1%{visibility:visible}to{visibility:visible;opacity:1}}.pvof-doc__wrapper,.rhdocs{font-size:1.125rem;line-height:1.6667;font-family:RedHatText,Red Hat Text,Helvetica Neue,Arial,sans-serif;color:#252525;-moz-tab-size:4;-o-tab-size:4;tab-size:4}.pvof-doc__wrapper *,.pvof-doc__wrapper :after,.pvof-doc__wrapper :before,.rhdocs *,.rhdocs :after,.rhdocs :before{box-sizing:border-box}.pvof-doc__wrapper img,.pvof-doc__wrapper object,.pvof-doc__wrapper svg,.rhdocs img,.rhdocs object,.rhdocs svg{display:inline-block;max-width:100%;vertical-align:middle}.pvof-doc__wrapper hr,.rhdocs hr{clear:both;height:0;margin:1rem 0;border:0;border-top:.0625rem solid #d2d2d2}.pvof-doc__wrapper a,.rhdocs a{color:#06c;text-decoration:none}.pvof-doc__wrapper a:focus,.pvof-doc__wrapper a:hover,.rhdocs a:focus,.rhdocs a:hover{color:#036;text-decoration:underline}.pvof-doc__wrapper p,.rhdocs p{margin:1.49963rem 0}.pvof-doc__wrapper li>p,.rhdocs li>p{margin:0}.pvof-doc__wrapper h1,.pvof-doc__wrapper h2,.pvof-doc__wrapper h3,.pvof-doc__wrapper h4,.pvof-doc__wrapper h5,.pvof-doc__wrapper h6,.rhdocs h1,.rhdocs h2,.rhdocs h3,.rhdocs h4,.rhdocs h5,.rhdocs h6{margin:0 0 .625rem;line-height:1.3333;font-family:RedHatDisplay,Red Hat Display,Helvetica Neue,Arial,sans-serif;font-weight:500}.pvof-doc__wrapper h1,.rhdocs h1{margin:2rem 0;font-size:2.25rem}.pvof-doc__wrapper h2,.rhdocs h2{margin:2rem 0;font-size:1.625rem}.pvof-doc__wrapper h3,.rhdocs h3{font-size:1.5rem;font-weight:400}.pvof-doc__wrapper h4,.rhdocs h4{font-size:1.25rem}.pvof-doc__wrapper h5,.rhdocs h5{font-size:1.25rem;font-weight:400}.pvof-doc__wrapper h6,.rhdocs h6{font-size:1.125rem;line-height:1.6667;font-weight:500}.pvof-doc__wrapper .heading,.rhdocs .heading{margin:1rem 0 0;font-size:1rem;line-height:1.6667;font-weight:700;font-style:normal;text-transform:none}.pvof-doc__wrapper .heading+.content>:first-child,.pvof-doc__wrapper .heading+p,.rhdocs .heading+.content>:first-child,.rhdocs .heading+p{margin-top:0}.pvof-doc__wrapper ol,.pvof-doc__wrapper ul,.rhdocs ol,.rhdocs ul{margin:1rem 0;padding:0 0 0 1.5rem}.pvof-doc__wrapper ol ::marker,.pvof-doc__wrapper ul ::marker,.rhdocs ol ::marker,.rhdocs ul ::marker{font:inherit}.pvof-doc__wrapper li,.rhdocs li{margin:0 0 .5em;padding:0}.pvof-doc__wrapper li>p,.rhdocs li>p{margin:.5rem 0}.pvof-doc__wrapper li>ol,.pvof-doc__wrapper li>ul,.rhdocs li>ol,.rhdocs li>ul{margin:0}.pvof-doc__wrapper dl,.rhdocs dl{margin:1rem 0}.pvof-doc__wrapper dl dt,.rhdocs dl dt{margin:.5rem 0;font-weight:600}.pvof-doc__wrapper dl dd,.rhdocs dl dd{margin:.5rem 0 .5rem 1rem}.pvof-doc__wrapper dl dd>p,.rhdocs dl dd>p{margin:.5rem 0}.pvof-doc__wrapper .informaltable,.pvof-doc__wrapper .table-contents,.pvof-doc__wrapper .table-wrapper,.rhdocs .informaltable,.rhdocs .table-contents,.rhdocs .table-wrapper{overflow-x:auto}.pvof-doc__wrapper table,.rhdocs table{margin:2rem 0;table-layout:fixed;border:0;font-size:1rem;line-height:1.6667}.pvof-doc__wrapper table caption,.rhdocs table caption{margin-top:.5rem;margin-bottom:.5rem;color:#585858;text-align:left}.pvof-doc__wrapper table td,.pvof-doc__wrapper table th,.rhdocs table td,.rhdocs table th{padding:.5em 1rem;border:0;border-bottom:.0625rem solid #d2d2d2;border-bottom:.0625rem solid var(--pfe-table--Border,#d2d2d2)}.pvof-doc__wrapper table td.halign-left,.pvof-doc__wrapper table th.halign-left,.rhdocs table td.halign-left,.rhdocs table th.halign-left{text-align:left}.pvof-doc__wrapper table td.halign-center,.pvof-doc__wrapper table th.halign-center,.rhdocs table td.halign-center,.rhdocs table th.halign-center{text-align:center}.pvof-doc__wrapper table td.halign-right,.pvof-doc__wrapper table th.halign-right,.rhdocs table td.halign-right,.rhdocs table th.halign-right{text-align:right}.pvof-doc__wrapper table td.valign-top,.pvof-doc__wrapper table th.valign-top,.rhdocs table td.valign-top,.rhdocs table th.valign-top{vertical-align:top}.pvof-doc__wrapper table td.valign-middle,.pvof-doc__wrapper table th.valign-middle,.rhdocs table td.valign-middle,.rhdocs table th.valign-middle{vertical-align:middle}.pvof-doc__wrapper table td.valign-bottom,.pvof-doc__wrapper table th.valign-bottom,.rhdocs table td.valign-bottom,.rhdocs table th.valign-bottom{vertical-align:bottom}.pvof-doc__wrapper table thead td,.pvof-doc__wrapper table thead th,.rhdocs table thead td,.rhdocs table thead th{font-weight:600;background:#f5f5f5}.pvof-doc__wrapper pre,.rhdocs pre{font-size:.875rem;line-height:1.6667;font-family:RedHatMono,Red Hat Mono,Consolas,monospace;color:#151515;white-space:pre;word-break:normal;background:#f5f5f5;overflow-wrap:normal}.pvof-doc__wrapper pre[class],.rhdocs pre[class]{line-height:1.6667}.pvof-doc__wrapper pre.nowrap,.rhdocs pre.nowrap{overflow:auto;white-space:pre;word-break:normal;overflow-wrap:normal}.pvof-doc__wrapper .codeblock__wrapper pre,.rhdocs .codeblock__wrapper pre{background:transparent}.pvof-doc__wrapper code,.rhdocs code{padding:.125em .5em;font-size:.875rem;line-height:1.6667;font-family:RedHatMono,Red Hat Mono,Consolas,monospace;color:#000;word-break:break-word;background:#eee;overflow-wrap:break-word}.pvof-doc__wrapper[class] pre code,.rhdocs[class] pre code{padding:0;font-size:inherit;line-height:inherit;font-family:inherit;color:inherit;font-weight:inherit;background:inherit}.pvof-doc__wrapper .keycap,.pvof-doc__wrapper kbd,.rhdocs .keycap,.rhdocs kbd{margin:0 .25rem;padding:.125rem .375rem;border-radius:.1875rem;font-size:90%;font-family:RedHatMono,Red Hat Mono,Consolas,monospace;font-weight:400;background-color:#eee;background-image:linear-gradient(180deg,#ddd,#eee,#fff);box-shadow:0 -.0625rem 0 0 #fff,0 .0625rem 0 .1875rem #aaa}.pvof-doc__wrapper .keycap strong,.rhdocs .keycap strong{font-weight:inherit}.pvof-doc__wrapper kbd.keyseq,.rhdocs kbd.keyseq{padding:0;border:0;background:transparent;box-shadow:none}.pvof-doc__wrapper kbd.keyseq kbd,.rhdocs kbd.keyseq kbd{display:inline-block;margin:0 .375rem}.pvof-doc__wrapper kbd.keyseq kbd:first-child,.rhdocs kbd.keyseq kbd:first-child{margin-left:0}.pvof-doc__wrapper b.button,.rhdocs b.button{padding:.1875rem;font-size:90%;font-weight:700}.pvof-doc__wrapper b.button:before,.rhdocs b.button:before{content:"["}.pvof-doc__wrapper b.button:after,.rhdocs b.button:after{content:"]"}.pvof-doc__wrapper summary::-webkit-details-marker,.rhdocs summary::-webkit-details-marker{display:none}.pvof-doc__wrapper summary,.rhdocs summary{position:relative;padding:1em 2em .75em 2.1875rem;color:#06c;cursor:pointer}.pvof-doc__wrapper summary:before,.rhdocs summary:before{content:"";position:absolute;top:50%;left:0;display:block;width:.6875rem;height:.6875rem;border:.25rem solid #151515;border-bottom:0;border-left:0;transition:transform .25s;transform:translateX(.25rem) translateY(.125em) rotate(45deg);transform-origin:right top}.pvof-doc__wrapper summary:focus,.rhdocs summary:focus{outline-color:#73bcf7}.pvof-doc__wrapper details[open]>summary:before,.rhdocs details[open]>summary:before{transform:translateY(.4375rem) translateY(.125em) rotate(135deg)}

/*! normalize.css v3.0.0 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:.0625rem dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 2.5rem}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:.0625rem solid silver;margin:0 .125rem;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}._additional-resources[class][class]{margin:2em 0 4em;padding:2rem 2rem 1rem;border:.0625rem solid #d2d2d2;border-radius:.1875rem;background:#fff}._additional-resources[class][class]:only-child{grid-column:1/-1}._additional-resources[class][class] .additional-resources__heading,._additional-resources[class][class] .heading,._additional-resources[class][class] h1,._additional-resources[class][class] h2,._additional-resources[class][class] h3,._additional-resources[class][class] h4,._additional-resources[class][class] h5,._additional-resources[class][class] h6,._additional-resources[class][class] p.title{display:block;margin:0 0 .5rem;padding:0;font-size:1.125rem;line-height:1.5rem;font-family:RedHatDisplay,Red Hat Display,Helvetica Neue,Arial,sans-serif;font-weight:400;text-transform:uppercase}._additional-resources[class][class] ul{position:relative;margin:0;padding:0;list-style:none;border:0}.related-topic-content__wrapper ._additional-resources[class][class] ul{display:block}._additional-resources[class][class] ul:after{content:"";position:absolute;bottom:0;display:block;width:100%;height:.125rem;background-color:#fff}._additional-resources[class][class] li{box-sizing:content-box;margin:0;padding:1rem 1.5rem 1rem 0;border-bottom:.0625rem solid #d2d2d2;-moz-column-break-inside:avoid;break-inside:avoid}._additional-resources[class][class] li:only-child{grid-column:1/-1}._additional-resources[class][class] li:last-child{border:0}@media (min-width:1100px){._additional-resources[class][class] li:last-child{border-bottom:.0625rem solid #d2d2d2}}._additional-resources[class][class] li p:only-child{margin:0;padding:0}._additional-resources[class][class] li a{text-decoration:none}._additional-resources[class][class] li a:focus,._additional-resources[class][class] li a:hover{text-decoration:underline}.admonitionblock,.pvof-doc__wrapper .caution,.pvof-doc__wrapper .important,.pvof-doc__wrapper .note,.pvof-doc__wrapper .tip,.pvof-doc__wrapper .warning{position:relative;margin:2rem 0;padding:.8888888889em .8888888889em .8888888889em 3.3125rem;border-left:.3333333333em solid #151515;font-size:1rem;line-height:1.5;color:#151515;background:#f4f4f4}.admonitionblock .admonition_header,.admonitionblock .title--type,.pvof-doc__wrapper .caution .admonition_header,.pvof-doc__wrapper .caution .title--type,.pvof-doc__wrapper .important .admonition_header,.pvof-doc__wrapper .important .title--type,.pvof-doc__wrapper .note .admonition_header,.pvof-doc__wrapper .note .title--type,.pvof-doc__wrapper .tip .admonition_header,.pvof-doc__wrapper .tip .title--type,.pvof-doc__wrapper .warning .admonition_header,.pvof-doc__wrapper .warning .title--type{font-weight:700}.admonitionblock .admonition_header p,.admonitionblock .title--type p,.pvof-doc__wrapper .caution .admonition_header p,.pvof-doc__wrapper .caution .title--type p,.pvof-doc__wrapper .important .admonition_header p,.pvof-doc__wrapper .important .title--type p,.pvof-doc__wrapper .note .admonition_header p,.pvof-doc__wrapper .note .title--type p,.pvof-doc__wrapper .tip .admonition_header p,.pvof-doc__wrapper .tip .title--type p,.pvof-doc__wrapper .warning .admonition_header p,.pvof-doc__wrapper .warning .title--type p{display:inline-block;margin:0;padding:0}.admonitionblock:after,.admonitionblock:before,.pvof-doc__wrapper .caution:after,.pvof-doc__wrapper .caution:before,.pvof-doc__wrapper .important:after,.pvof-doc__wrapper .important:before,.pvof-doc__wrapper .note:after,.pvof-doc__wrapper .note:before,.pvof-doc__wrapper .tip:after,.pvof-doc__wrapper .tip:before,.pvof-doc__wrapper .warning:after,.pvof-doc__wrapper .warning:before{content:"";position:absolute;display:block}.admonitionblock:before,.pvof-doc__wrapper .caution:before,.pvof-doc__wrapper .important:before,.pvof-doc__wrapper .note:before,.pvof-doc__wrapper .tip:before,.pvof-doc__wrapper .warning:before{top:.8888888889em;left:.7222222222em;width:1.3333333333em;height:1.3333333333em;border-radius:50%;background:#151515}.admonitionblock:after,.pvof-doc__wrapper .caution:after,.pvof-doc__wrapper .important:after,.pvof-doc__wrapper .note:after,.pvof-doc__wrapper .tip:after,.pvof-doc__wrapper .warning:after{top:.8888888889em;left:1.0833333333em;width:.6111111111em;height:1.3333333333em;background:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/thumbtack-solid.svg) no-repeat 50%;background-size:100% auto}.admonitionblock.note:after,.pvof-doc__wrapper .caution.note:after,.pvof-doc__wrapper .important.note:after,.pvof-doc__wrapper .note.note:after,.pvof-doc__wrapper .tip.note:after,.pvof-doc__wrapper .warning.note:after{transform:translateY(.0555555556em)}.admonitionblock.caution,.pvof-doc__wrapper .caution.caution,.pvof-doc__wrapper .important.caution,.pvof-doc__wrapper .note.caution,.pvof-doc__wrapper .tip.caution,.pvof-doc__wrapper .warning.caution{border-left-color:#df7409;color:#8f4c09;background:#fff3e7}.admonitionblock.caution:before,.pvof-doc__wrapper .caution.caution:before,.pvof-doc__wrapper .important.caution:before,.pvof-doc__wrapper .note.caution:before,.pvof-doc__wrapper .tip.caution:before,.pvof-doc__wrapper .warning.caution:before{content:none}.admonitionblock.caution:after,.pvof-doc__wrapper .caution.caution:after,.pvof-doc__wrapper .important.caution:after,.pvof-doc__wrapper .note.caution:after,.pvof-doc__wrapper .tip.caution:after,.pvof-doc__wrapper .warning.caution:after{top:.9444444444em;left:.7777777778em;width:1.2222222222em;background-image:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/exclamation-triangle-solid.svg)}.admonitionblock.important,.pvof-doc__wrapper .caution.important,.pvof-doc__wrapper .important.important,.pvof-doc__wrapper .note.important,.pvof-doc__wrapper .tip.important,.pvof-doc__wrapper .warning.important{border-left-color:#f0ab00;color:#7d643f;background:#fdf7e7}.admonitionblock.important:before,.pvof-doc__wrapper .caution.important:before,.pvof-doc__wrapper .important.important:before,.pvof-doc__wrapper .note.important:before,.pvof-doc__wrapper .tip.important:before,.pvof-doc__wrapper .warning.important:before{content:none}.admonitionblock.important:after,.pvof-doc__wrapper .caution.important:after,.pvof-doc__wrapper .important.important:after,.pvof-doc__wrapper .note.important:after,.pvof-doc__wrapper .tip.important:after,.pvof-doc__wrapper .warning.important:after{left:.75em;width:1.2777777778em;background-image:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/exclamation-circle-solid.svg)}.admonitionblock.warning,.pvof-doc__wrapper .caution.warning,.pvof-doc__wrapper .important.warning,.pvof-doc__wrapper .note.warning,.pvof-doc__wrapper .tip.warning,.pvof-doc__wrapper .warning.warning{border-left-color:#c9190b;color:#7d1007;background:#faeae8}.admonitionblock.warning:before,.pvof-doc__wrapper .caution.warning:before,.pvof-doc__wrapper .important.warning:before,.pvof-doc__wrapper .note.warning:before,.pvof-doc__wrapper .tip.warning:before,.pvof-doc__wrapper .warning.warning:before{top:.8888888889em;left:.7222222222em;width:1.3333333333em;height:1.3333333333em;border-radius:.1666666667em;background:#c9190b}.admonitionblock.warning:after,.pvof-doc__wrapper .caution.warning:after,.pvof-doc__wrapper .important.warning:after,.pvof-doc__wrapper .note.warning:after,.pvof-doc__wrapper .tip.warning:after,.pvof-doc__wrapper .warning.warning:after{left:1.3888888889em;width:.5em;background-image:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/exclamation-solid.svg);transform:scale(.5) translateX(-.25em);transform-origin:left center}.admonitionblock.tip,.pvof-doc__wrapper .caution.tip,.pvof-doc__wrapper .important.tip,.pvof-doc__wrapper .note.tip,.pvof-doc__wrapper .tip.tip,.pvof-doc__wrapper .warning.tip{border-left-color:#2b9af3;color:#002952;background:#e7f1fa}.admonitionblock.tip:before,.pvof-doc__wrapper .caution.tip:before,.pvof-doc__wrapper .important.tip:before,.pvof-doc__wrapper .note.tip:before,.pvof-doc__wrapper .tip.tip:before,.pvof-doc__wrapper .warning.tip:before{background:#2b9af3}.admonitionblock.tip:after,.pvof-doc__wrapper .caution.tip:after,.pvof-doc__wrapper .important.tip:after,.pvof-doc__wrapper .note.tip:after,.pvof-doc__wrapper .tip.tip:after,.pvof-doc__wrapper .warning.tip:after{left:1.1111111111em;width:.5555555556em;background:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/lightbulb-solid.svg) no-repeat 50%;transform:translateY(.0555555556em)}.admonitionblock .content>:first-child,.pvof-doc__wrapper .caution .content>:first-child,.pvof-doc__wrapper .important .content>:first-child,.pvof-doc__wrapper .note .content>:first-child,.pvof-doc__wrapper .tip .content>:first-child,.pvof-doc__wrapper .warning .content>:first-child{margin-top:0}.admonitionblock .content>:last-child,.pvof-doc__wrapper .caution .content>:last-child,.pvof-doc__wrapper .important .content>:last-child,.pvof-doc__wrapper .note .content>:last-child,.pvof-doc__wrapper .tip .content>:last-child,.pvof-doc__wrapper .warning .content>:last-child{margin-bottom:0}.codeblock__wrapper,pre{position:relative;z-index:0;overflow:visible;border:.0625rem solid #d9d9d9;background:#f8f8f8;transform:translate(0)}.codeblock__wrapper:after,pre:after{content:"";position:fixed;top:0;right:0;bottom:1.25rem;z-index:1;display:block;width:4.0625rem;background:linear-gradient(270deg,#f8f8f8 70%,hsla(0,0%,97.3%,0))}.admonition .codeblock__wrapper,.admonitionblock .codeblock__wrapper,.admonitionblock pre,.admonition pre{background:#fff}.admonition .codeblock__wrapper:after,.admonitionblock .codeblock__wrapper:after,.admonitionblock pre:after,.admonition pre:after{background:linear-gradient(270deg,#fff 70%,hsla(0,0%,100%,0))}.codeblock__inner-wrapper{display:grid;overflow-x:auto;grid-template-columns:1fr 4.375rem}.codeblock__inner-wrapper:after{content:"";display:block;width:4.375rem;min-height:.625rem}.codeblock[class]{overflow:visible;margin:0;padding-right:0}.codeblock[class][class][class][class][class]{max-width:99999em}.codeblock__copy{--pfe-clipboard--icon--Color--hover:#06c;position:fixed;top:1rem;left:calc(100% - 2.75rem);z-index:2;width:1.75rem;height:1.75rem;padding:.3125rem .375rem;background:#f0efef}.codeblock__copy span{position:absolute;display:block;visibility:hidden;width:0;height:0}.codeblock__copy:focus{outline:.0625rem dashed currentcolor}.codeblock__copy svg#icon--copy{width:1rem;height:1rem}.colist>ol>li:before,.conum,.pvof-doc__wrapper .callout{position:relative;top:-.125em;display:inline-block;width:1.25rem;height:1.25rem;padding:0;border-radius:50%;font-size:.75rem;line-height:1.35rem;font-family:RedHatText,Red Hat Text,Helvetica Neue,Arial,sans-serif;color:#fff;font-weight:600;font-style:normal;text-align:center;vertical-align:middle;background:#06c}.colist>ol,.pvof-doc__wrapper .calloutlist>ol{margin:1rem 0 2rem;padding:0;list-style:none;counter-reset:colist}.colist>ol>li,.pvof-doc__wrapper .calloutlist>ol>li{position:relative;margin:.5rem 0;padding-left:1.75rem;counter-increment:colist;font-size:1rem}.colist>ol>li .colist-num,.pvof-doc__wrapper .calloutlist>ol>li .colist-num{display:none}.colist>ol>li:before,.pvof-doc__wrapper .calloutlist>ol>li:before{content:counter(colist);position:absolute;top:.1875rem;left:0}.pvof-doc__wrapper .calloutlist dt{float:left;clear:left;margin:0;padding:0 .5rem 0 0}.rhdocs__guides-list__wrapper{margin:0 0 2em;padding:1.5rem 1.5rem 2em;border-bottom:.0625rem solid #d2d2d2}@media (min-width:1100px){.rhdocs__guides-list__wrapper{padding:1.5rem 0 2em;border:0}}.rhdocs__guides-list__headline[class]{margin:0 0 1rem;padding:0;font-size:1.25rem;font-weight:500}.rhdocs__guides-list[class]{padding:1rem 0}.rhdocs__guides-list,.rhdocs__guides-list ul{list-style:none}.rhdocs__guides-list[class] ul{margin:0 0 .5rem;padding:0}.rhdocs__guides-list li{margin:0;padding:0}.rhdocs__guides-list[class] a{display:inline-block;padding:.375rem 0;color:#06c}.rhdocs__guides-list[class] a:focus,.rhdocs__guides-list[class] a:hover{text-decoration:underline}.rhdocs__guides-list[class][class] code{margin:0;padding:0;border:0;font:inherit;color:inherit;background:transparent}.included-in-guides[class]{margin:2em 0 4em;padding:2rem 2rem 1rem;border:.0625rem solid #d2d2d2;border-radius:.1875rem;background:#fff}.included-in-guides[class]:only-child{grid-column:1/-1}.included-in-guides[class] .additional-resources__heading,.included-in-guides[class] .heading,.included-in-guides[class] h1,.included-in-guides[class] h2,.included-in-guides[class] h3,.included-in-guides[class] h4,.included-in-guides[class] h5,.included-in-guides[class] h6,.included-in-guides[class] p.title{display:block;margin:0 0 .5rem;padding:0;font-size:1.125rem;line-height:1.5rem;font-family:RedHatDisplay,Red Hat Display,Helvetica Neue,Arial,sans-serif;font-weight:400;text-transform:uppercase}.included-in-guides[class] ul{position:relative;margin:0;padding:0;list-style:none;border:0}.related-topic-content__wrapper .included-in-guides[class] ul{display:block}.included-in-guides[class] ul:after{content:"";position:absolute;bottom:0;display:block;width:100%;height:.125rem;background-color:#fff}.included-in-guides[class] li{box-sizing:content-box;margin:0;padding:1rem 1.5rem 1rem 0;border-bottom:.0625rem solid #d2d2d2;-moz-column-break-inside:avoid;break-inside:avoid}.included-in-guides[class] li:only-child{grid-column:1/-1}.included-in-guides[class] li:last-child{border:0}@media (min-width:1100px){.included-in-guides[class] li:last-child{border-bottom:.0625rem solid #d2d2d2}}.included-in-guides[class] li p:only-child{margin:0;padding:0}.included-in-guides[class] li a{text-decoration:none}.included-in-guides[class] li a:focus,.included-in-guides[class] li a:hover{text-decoration:underline}.menuseq{display:inline-flex;overflow:hidden;text-indent:-9999em}.menuseq .menu,.menuseq .menuitem,.menuseq .submenu{position:relative;display:block;text-indent:0}.menuseq .menu+.menu:before,.menuseq .menu+.menuitem:before,.menuseq .menu+.submenu:before,.menuseq .menuitem+.menu:before,.menuseq .menuitem+.menuitem:before,.menuseq .menuitem+.submenu:before,.menuseq .submenu+.menu:before,.menuseq .submenu+.menuitem:before,.menuseq .submenu+.submenu:before{content:">";display:inline-block;padding:0 .25em;font-weight:700}.rhdocs__print-button{position:relative;margin:0;padding:0 0 0 1.375rem;border:0;color:#06c;background:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/print-solid.svg) no-repeat 0;background-size:1rem auto;-webkit-appearance:none;-moz-appearance:none;appearance:none}.rhdocs__print-button:focus,.rhdocs__print-button:hover{color:#036;text-decoration:underline}@supports ((-webkit-mask-image:url("/docs-fed-assets/dist/adoc-templates/images//fa-icons/print-solid.svg")) or (mask-image:url("/docs-fed-assets/dist/adoc-templates/images//fa-icons/print-solid.svg"))){.rhdocs__print-button{background:none}.rhdocs__print-button:before{content:"";position:absolute;top:0;bottom:0;left:0;display:block;width:1rem;background:currentcolor;-webkit-mask:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/print-solid.svg) no-repeat center center;mask:url(/docs-fed-assets/dist/adoc-templates/images/fa-icons/print-solid.svg) no-repeat center center;-webkit-mask-size:100% auto;mask-size:100% auto}}@media print{.rhdocs__print-button{display:none}}.related-topic-content__wrapper{margin:2em 0}.related-topic-content__wrapper--for-guide{position:relative;z-index:1;margin-bottom:-2.5rem;padding-bottom:.0625rem}.related-topic-content__wrapper--for-guide:before{content:"";position:absolute;top:0;right:-4.5rem;left:-3rem;z-index:-1;display:block;width:auto;height:100%;background:#f0f0f0}@media (min-width:1100px){.related-topic-content__wrapper--for-guide:before{right:-3.625rem;left:-2.5rem}}.related-topic-content__wrapper--for-guide summary{padding:1em 2em 1em 2.1875rem}@media (min-width:950px){.related-topic-content__inner-wrapper{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));gap:2em}}.rhdocs__section-list__wrapper{margin:0 0 2em;padding:0 1.5rem 2em;border-bottom:.0625rem solid #d2d2d2}@media (min-width:1100px){.toolbar-fixed .rhdocs__section-list__wrapper{top:3.125rem;max-height:calc(100vh - 3.125rem)}}@media (min-width:1100px){.rhdocs__section-list__wrapper .tool-bar-tray-open{top:5.625rem}}@media (min-width:1100px){.rhdocs__section-list__wrapper{position:-webkit-sticky;position:sticky;top:0;overflow-y:auto;max-height:100vh;margin:-2.5rem 0 0;padding:2.5rem 0 0;border:0}}.rhdocs__section-list__headline[class]{margin:0 0 1rem;padding:0;font-size:1.25rem;font-weight:500}.rhdocs__section-list__jump-headline{margin:0 0 1rem;padding:0;font-size:.875rem;line-height:1.0625rem;text-transform:uppercase}.rhdocs__section-list{visibility:hidden;opacity:0;-webkit-animation:fade-in .25s 2.5s 1 forwards;animation:fade-in .25s 2.5s 1 forwards}:host .rhdocs__section-list{-webkit-animation:fade-in .25s 0s 1 forwards;animation:fade-in .25s 0s 1 forwards}.rhdocs__section-list[class]{padding:1rem 0}.rhdocs__section-list,.rhdocs__section-list ul{list-style:none}.rhdocs__section-list[class] ul{margin:0 0 .5rem;padding:0}.rhdocs__section-list li{margin:0;padding:0}.rhdocs__section-list li li{padding:0 0 0 .5rem}.rhdocs__section-list[class] a{display:inline-block;padding:.375rem 0}.rhdocs__section-list[class][class] code{margin:0;padding:0;border:0;font:inherit;color:inherit;background:transparent}.rhdocs__section-list--has-scrollspy[class]{padding-left:.9375rem}.rhdocs__section-list--has-scrollspy[class] ul{margin:0;padding:0}.rhdocs__section-list--has-scrollspy[class] li{padding-left:0}.rhdocs__section-list--has-scrollspy[class] a{margin-left:-.9375rem;padding-left:.9375rem;color:#6a6e73;box-shadow:inset .125rem 0 0 0 #d2d2d2}.rhdocs__section-list--has-scrollspy[class] a.is-active{color:#151515;box-shadow:inset .125rem 0 0 0 #e00}.rhdocs__section-list--has-scrollspy[class] li li:last-child>a{padding-bottom:.875rem}.rhdocs__section-list--has-scrollspy[class] li li a{padding-left:1.875rem}.rhdocs__section-list--has-scrollspy[class] li li li a{padding-left:2.8125rem}.rhdocs__section-list--has-scrollspy[class] li li li li a{padding-left:3.75rem}.local-render .rhdocs-content{margin:0 auto}cp-documentation{display:block;padding-bottom:2.5rem}cp-documentation.PFElement,cp-documentation[pfelement]{padding:0}rh-table{display:block}.pvof-doc__wrapper ::-webkit-scrollbar,:host .rhdocs ::-webkit-scrollbar{width:.625rem;height:.625rem}.pvof-doc__wrapper ::-webkit-scrollbar,.pvof-doc__wrapper ::-webkit-scrollbar-track,:host .rhdocs ::-webkit-scrollbar,:host .rhdocs ::-webkit-scrollbar-track{background-color:#d6d6d6}.pvof-doc__wrapper ::-webkit-scrollbar-thumb,:host .rhdocs ::-webkit-scrollbar-thumb{background-color:#8e8e8e}.pvof-doc__wrapper *,:host .rhdocs *{scrollbar-color:#8e8e8e #d6d6d6}.pvof-doc__wrapper p:empty,.rhdocs p:empty{display:none}.pvof-doc__wrapper[class] h1 code,.pvof-doc__wrapper[class] h2 code,.pvof-doc__wrapper[class] h3 code,.pvof-doc__wrapper[class] h4 code,.pvof-doc__wrapper[class] h5 code,.pvof-doc__wrapper[class] h6 code,.rhdocs[class] h1 code,.rhdocs[class] h2 code,.rhdocs[class] h3 code,.rhdocs[class] h4 code,.rhdocs[class] h5 code,.rhdocs[class] h6 code{margin:0;padding:0;border:0;font:inherit;color:inherit;background:transparent}.pvof-doc__wrapper .pane-page-title h1,.rhdocs__header__primary-wrapper h1{font-size:2.25rem;line-height:1.333;font-family:RedHatDisplay,Red Hat Display,Helvetica Neue,Arial,sans-serif}.rhdocs-details[class]{margin:1rem 0 3rem;padding:0;list-style:none}.rhdocs-toc[class]{margin:1rem 0 2rem;padding:1rem;background:#f2f2f2}.rhdocs-toc[class]>:last-child{margin-bottom:0}.rhdocs-toc[class] .rhdocs-toctitle{margin-top:0;font-size:1.25rem;line-height:1.6667;font-weight:400;text-transform:none}.rhdocs-toc[class] li{margin-bottom:.25em;padding-left:.5em}.preamble{margin:0 0 2rem}.sect1{margin:2rem 0 1rem}:host .sect1,cp-documentation .sect1{margin:0 0 2rem;padding:.0625rem 0 0}:host(.cp-documentation--has-external-header) .sect1:first-child>h2:first-child,:host(.cp-documentation--has-external-header) .sect1:first-child>h3:first-child{margin-top:0}.listingblock,.literalblock{margin:1rem 0}.quoteblock,.verseblock{margin:1rem 0;padding:1rem 1rem 1rem 2rem;border-left:.25rem solid #d2d2d2}.quoteblock.pullleft,.verseblock.pullleft{float:left;width:25rem;margin-right:3rem}@media (min-width:768px){.quoteblock.pullleft,.verseblock.pullleft{margin-left:-1rem}}.quoteblock.pullright,.verseblock.pullright{float:right;width:25rem;margin-left:3rem}@media (min-width:768){.quoteblock.pullright,.verseblock.pullright{margin-right:-2rem}}@media (min-width:1100px){.quoteblock.pullright,.verseblock.pullright{margin-right:-10rem}}.quoteblock>:first-child,.verseblock>:first-child{margin-top:0}.quoteblock .content,.verseblock .content{font-size:1.25rem;line-height:1.6667;font-family:RedHatText,Red Hat Text,Helvetica Neue,Arial,sans-serif}.quoteblock .attribution,.verseblock .attribution{font-size:.875rem;line-height:1.6667;font-weight:600;font-style:italic;text-transform:uppercase}.quoteblock .attribution .citetitle,.verseblock .attribution .citetitle{color:#585858}.quoteblock .attribution cite,.verseblock .attribution cite{font-size:1em}.quoteblock blockquote{margin:0;padding:0;font-style:italic}.quoteblock blockquote .content>:first-child{margin-top:0}.quoteblock blockquote .content>:first-child:before{content:"“";display:block;float:left;margin-right:.5rem;font-size:2.75rem;line-height:1.125em;color:#e00;font-style:normal}.quoteblock blockquote .content>:first-child .content>:first-child:before{content:none}.imageblock{margin:1rem 0}.imageblock.pullleft{float:left;width:25rem;margin-right:3rem}@media (min-width:768px){.imageblock.pullleft{margin-left:-1rem}}.imageblock.pullright{float:right;width:25rem;margin-left:3rem}@media (min-width:768){.imageblock.pullright{margin-right:-2rem}}@media (min-width:1100px){.imageblock.pullright{margin-right:-10rem}}.imageblock.interrupter{margin:2rem 0}@media (min-width:768px){.imageblock.interrupter{margin-right:-2rem;margin-left:-1rem}.imageblock.interrupter .caption{margin-right:2rem;margin-left:1rem}}@media (min-width:1100px){.imageblock.interrupter{margin-right:-10rem}.imageblock.interrupter .caption{margin-right:10rem}}.imageblock.interrupter img{max-width:100%}.imageblock .caption{display:block;margin:.5rem 0 0;font-size:.875rem;line-height:1.6667;color:#585858}.rhdocs-footnotes{margin:3rem 0 1rem;padding:1rem 0 0;border-top:.0625rem solid #d2d2d2}.rhdocs-footnotes>ol{margin:0;padding:0 0 0 1.5rem}@supports (counter-reset:footnotenum){.rhdocs-footnotes>ol{padding:0;list-style:none;counter-reset:footnotenum}.rhdocs-footnotes>ol>li{counter-increment:footnotenum}.rhdocs-footnotes>ol>li:before{content:"[" counter(footnotenum) "]";display:inline-block;margin-right:.25rem;color:#585858}}.rhdocs-footer{margin:3rem 0 0;padding:1rem;font-size:.875rem;line-height:1.6667;color:#252525;background:#ededed}.center{margin-right:auto;margin-left:auto}.stretch{width:100%}.visually-hidden{position:absolute;overflow:hidden;clip:rect(0,0,0,0);width:.0625rem;height:.0625rem;margin:-.0625rem;padding:0;border:0}.rh-docs-legal-notice{margin-top:4em}pre,pre[class]{position:relative;overflow:auto;margin:.5em 0;padding:1.25em 1em}code[class*=language-],pre[class*=language-]{color:#151515;-moz-tab-size:4;-o-tab-size:4;tab-size:4}code.language-none,code.language-text,code.language-txt,pre.language-none,pre.language-text,pre.language-txt{color:#151515}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{color:#263238;background:#cceae7}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{color:#263238;background:#cceae7}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.2em;white-space:normal}.token.atrule{color:#40199a}.token.attr-name{color:#06c}.token.attr-value,.token.attribute{color:#b300b3}.token.boolean{color:#40199a}.token.builtin,.token.cdata,.token.char,.token.class,.token.class-name{color:#06c}.token.comment{color:#6a6e73}.token.constant{color:#40199a}.token.deleted{color:#c9190b}.token.doctype{color:#6a6e73}.token.entity{color:#c9190b}.token.function{color:#40199a}.token.hexcode{color:#b300b3}.token.id,.token.important{color:#40199a;font-weight:700}.token.inserted{color:#06c}.token.keyword{color:#40199a}.token.number{color:#b300b3}.token.operator{color:#06c}.token.prolog{color:#6a6e73}.token.property{color:#06c}.token.pseudo-class,.token.pseudo-element{color:#b300b3}.token.punctuation,.token.regex{color:#06c}.token.selector{color:#c9190b}.token.string{color:#b300b3}.token.symbol{color:#40199a}.token.tag{color:#c9190b}.token.unit{color:#b300b3}.token.url,.token.variable{color:#c9190b}.rhdocs.local-render{max-width:45.8125rem;margin:0 auto;padding:0 1.5rem}@media (min-width:1100px){.rh-docs__content-wrapper{display:flex}}.rh-docs__sidebar{position:relative;z-index:2;padding:1rem 0 0;background:#fff}.rhdocs__header--assembly~.rh-docs__content-wrapper .rh-docs__sidebar:after{top:-1.5rem}@media (min-width:1100px){.rh-docs__sidebar:after{content:"";position:absolute;top:0;right:0;bottom:0;display:block;width:0;border-right:.125rem solid #d2d2d2}}@media (min-width:1100px){.rh-docs__sidebar{flex-basis:30%;flex-grow:1;width:30%;min-width:15.2777777778em;max-width:19.4444444444em;padding-right:1.875rem;padding-left:1.5rem}:host .rh-docs__sidebar{padding-left:0}}@media (min-width:1100px){.rh-docs__sidebar~.rh-docs__content,.rh-docs__sidebar~cp-documentation{flex-basis:70%}}@media (min-width:1100px){.rh-docs__content,cp-documentation{flex-grow:1}}.rh-docs__content{padding:0 1.5rem}@media print{.field code,.field pre,code[class*=language-],pre,pre[class*=language-]{white-space:pre-wrap!important;word-wrap:break-word!important;word-break:break-word!important;overflow-wrap:break-word!important}}.j-switch__wrapper{position:relative;line-height:var(--jupiter__lineHeight--xs,1.3333)}.j-switch__label{position:relative;top:0;margin-right:5rem;margin-bottom:0;padding:.5em 3.5833333333em .5em .5em;font-weight:400;cursor:pointer}@media (min-width:1400px){.j-switch__label{top:-.5em;margin:0}}.j-switch__input:focus+.j-switch__label,.j-switch__label:focus{outline:.0625rem dashed #151515}.j-switch{top:.5em;right:.5em;box-sizing:content-box;width:2.3333333333em;height:1.11111em;border:.125rem solid;border-radius:calc(var(--jupiter__lineHeight--xs, 1.3333)*0.5em);transition:background-color .25s}.j-switch,.j-switch:before{position:absolute;display:block}.j-switch:before{content:"";top:.1666666667em;left:.1666666667em;width:.7777777778em;height:.7777777778em;border-radius:50%;background:currentColor;box-shadow:0 .0625rem .0625rem 0 rgba(3,3,3,.05),0 .25rem .5rem .25rem rgba(3,3,3,.06);transition:transform .25s cubic-bezier(.21,.84,.56,1.55)}input:checked+label .j-switch{border-color:var(--jupiter__palette__blue--40,#06c);background-color:var(--jupiter__palette__blue--40,#06c)}input:checked+label .j-switch:before{background-color:#fff;transform:translate(1.2222222222em)}.j-reading-mode__toggle{display:none}@media (min-width:1000px){.j-reading-mode__toggle{display:flex;align-items:center;justify-content:flex-end;width:100%}}.j-reading-mode__shortcut-hint{display:inline-block;margin-left:.3em}.j-reading-mode__shortcut-hint kbd{margin:0 .25rem;padding:.125rem .375rem;border-radius:.1875rem;font-size:90%;font-family:var(--jupiter__font__family--mono,"Red Hat Mono",RedHatMono,Consolas,monospace);color:inherit;font-weight:400;background-color:#eee;background-image:linear-gradient(180deg,#ddd,#eee,#fff);box-shadow:0 -.0625rem 0 0 #fff,0 .0625rem 0 .1875rem #aaa}@-webkit-keyframes reveal-dropdowns{0%{visibility:hidden;max-height:0;opacity:0}1%{visibility:visible}99%{max-height:9999em}to{visibility:visible;opacity:1}}@keyframes reveal-dropdowns{0%{visibility:hidden;max-height:0;opacity:0}1%{visibility:visible}99%{max-height:9999em}to{visibility:visible;opacity:1}}.book-nav__list[class]{display:flex;justify-content:space-between;margin:5rem 0 0;padding:0;list-style:none;line-height:var(--jupiter__lineHeight--xs,1.3333)}@media (min-width:1200px){.book-nav__list[class]{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));gap:2rem}}.book-nav__item a{position:relative;display:inline-block;padding-left:1.25rem;font-size:.875rem;font-weight:500;text-transform:uppercase}.book-nav__item a:before{content:"";position:absolute;top:.125rem;left:0;display:block;width:.875rem;height:.875rem;background:url(/docs-fed-assets/dist/jupiter/images/arrow-down-solid.svg) no-repeat;background-size:contain;transform:rotate(90deg)}@supports ((-webkit-mask:url("")) or (mask:url(""))){.book-nav__item a:before{background:currentColor;-webkit-mask-image:url(/docs-fed-assets/dist/jupiter/images/arrow-down-solid.svg);mask-image:url(/docs-fed-assets/dist/jupiter/images/arrow-down-solid.svg);-webkit-mask-position:center center;mask-position:center center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat}}.book-nav__item--next{grid-column:2;text-align:right}.book-nav__item--next a{padding-right:1.25rem;padding-left:0;text-align:right}.book-nav__item--next a:before{right:0;left:auto;transform:rotate(-90deg)}.breadcrumbs[class]{box-shadow:.25rem 0 .25rem 0 rgba(0,0,0,.25)}#breadcrumbs[class][class]{padding-right:2rem;padding-left:2rem}#breadcrumbs[class],.breadcrumbs[class]{width:auto}body[debug]:after{content:"";position:fixed;top:50%;left:0;z-index:99999;display:block;width:100%;height:.0625rem;background:rgba(255,0,0,.2);pointer-events:none}.j-doc-nav{position:relative;z-index:5;display:flex;justify-content:space-between;height:3.25rem}@media (min-width:1000px){.j-doc-nav{height:auto}}.j-has-opened-doc-menu--options--mobile .j-sidebar__menu-container{display:none}@media (min-width:1200px){.j-has-opened-doc-menu--options--mobile .j-sidebar__menu-container{display:block}}.j-sidebar__menu-container[open]{z-index:10;width:100%;background:#fff}.j-sidebar__menu-container[open] .j-sidebar__menu-trigger__open-text{color:#757575}.j-sidebar__menu-container[open] .j-sidebar__menu-trigger__close-text{display:flex}.j-sidebar__menu-container .j-sidebar__menu-trigger__close-text{display:none}.j-sidebar__menu-container li,.j-sidebar__menu-container ul{margin:0;padding:0;list-style:none}.j-doc-nav__wrapper{position:-webkit-sticky;position:sticky;top:0;overflow-x:hidden;overflow-y:auto;max-height:100vh;margin-right:auto;margin-left:auto;padding-top:1.25rem;padding-right:1.5rem;padding-left:1.5rem;background:#fff;transition:padding-left .5s ease,padding-right .5s ease;visibility:hidden;height:0;-webkit-animation:reveal-dropdowns .1618s 4s 1 forwards;animation:reveal-dropdowns .1618s 4s 1 forwards}@media (min-width:1000px){.j-doc-nav__wrapper{visibility:visible;height:auto;max-height:auto;-webkit-animation:none;animation:none;padding-top:3.9375rem;padding-right:2rem;padding-left:2rem}}@media (min-width:1200px){.j-doc-nav__wrapper{bottom:0}}.j-sidebar__menu-container--processed .j-doc-nav__wrapper{visibility:visible;height:auto;max-height:auto;-webkit-animation:none;animation:none}.j-sidebar__menu-container[open] .j-doc-nav__wrapper{box-shadow:0 .3125rem 1.0625rem 0 rgba(0,0,0,.15)}@media (min-width:1000px){.j-sidebar__menu-container[open] .j-doc-nav__wrapper{box-shadow:none}}@media (min-width:1000px){.j-reading-mode--enabled .j-doc-nav__wrapper{padding-right:0;padding-left:0}}.j-doc-nav{width:100%;padding:0;line-height:var(--jupiter__lineHeight--xs,1.3333);background:#fff;transition:width .5s ease}.j-sidebar__menu-trigger{display:flex;justify-content:space-between;padding:1rem;list-style:none;font-size:.875rem;color:#151515;font-weight:600;text-transform:uppercase;cursor:pointer}.j-sidebar__menu-trigger::-webkit-details-marker{display:none}@media (min-width:1000px){.j-sidebar__menu-trigger{display:none}}.j-sidebar__menu-trigger--options{color:#06c}.j-sidebar__menu-trigger--options:focus,.j-sidebar__menu-trigger--options:hover{color:#004080}@supports ((-webkit-mask-image:url("/docs-fed-assets/dist/jupumbra/images//language-format.svg")) or (mask-image:url("/docs-fed-assets/dist/jupumbra/images//language-format.svg"))){.j-sidebar__menu-trigger--options{background:none}.j-sidebar__menu-trigger--options:before{content:"";display:block;width:2.625rem;height:1.25rem;margin-right:.5em;background:currentcolor;-webkit-mask:url(/docs-fed-assets/dist/jupumbra/images/language-format.svg) no-repeat center center;mask:url(/docs-fed-assets/dist/jupumbra/images/language-format.svg) no-repeat center center;-webkit-mask-size:100% auto;mask-size:100% auto}}.j-sidebar__menu-trigger--tablet{position:absolute;top:-2.8125rem;right:.625rem;display:none;width:auto;color:#06c}.j-sidebar__menu-trigger--tablet:focus,.j-sidebar__menu-trigger--tablet:hover{color:#004080}@media (min-width:1000px){.j-sidebar__menu-trigger--tablet{display:flex}}@media (min-width:1400px){.j-sidebar__menu-trigger--tablet{display:none}}@supports ((-webkit-mask-image:url("/docs-fed-assets/dist/jupumbra/images//language-format.svg")) or (mask-image:url("/docs-fed-assets/dist/jupumbra/images//language-format.svg"))){.j-sidebar__menu-trigger--tablet{background:none}.j-sidebar__menu-trigger--tablet:before{content:"";display:block;width:2.625rem;height:1.25rem;margin-right:.5em;background:currentcolor;-webkit-mask:url(/docs-fed-assets/dist/jupumbra/images/language-format.svg) no-repeat center center;mask:url(/docs-fed-assets/dist/jupumbra/images/language-format.svg) no-repeat center center;-webkit-mask-size:100% auto;mask-size:100% auto}}.j-sidebar__menu-trigger svg{height:1.875rem;fill:#06c}.j-sidebar__menu-trigger svg:focus,.j-sidebar__menu-trigger svg:hover{fill:#004080}.j-doc-nav__title{font-size:1.125em;line-height:var(--jupiter__lineHeight--xs,1.3333);font-family:var(--jupiter__font__family,"Red Hat Text",RedHatText,Inter,-apple-system,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif)}.j-doc-nav__title--desktop{display:none;margin-top:0}@media (min-width:1200px){.j-doc-nav__title--desktop{display:block}}@media (min-width:1200px){.j-doc-nav__menu-title,.j-doc-nav__title--mobile{display:none}}.j-doc-nav__menu-title{margin:0;padding:.875rem 0;font-size:.875rem;font-weight:500;text-transform:uppercase}.pvof-doc__toc{max-inline-size:25rem;margin:0 auto}@media (min-width:1850px){.pvof-doc__toc{margin-right:0}}.pvof-doc__toc:last-child{margin-bottom:3.75rem}@media (min-width:1000px){.j-doc-nav__list{width:calc(33.33333vw - 5.75rem - var(--scrollbarWidth, 40px)/12*4)}}@media (min-width:1400px){.j-doc-nav__list{width:calc(25vw - 5.75rem - var(--scrollbarWidth, 40px)/12*3)}}@media (min-width:1850px){.j-doc-nav__list{width:22.5rem}}.j-doc-nav__list{margin:0;padding:0}.j-doc-nav__list-item{position:relative}.j-doc-nav__children-toggle,.j-doc-nav__link{display:block;margin:.125rem 0;padding:.5625rem 0}.j-doc-nav__children-toggle[class],.j-doc-nav__link[class]{color:#151515}.j-doc-nav__children-toggle.is-active,.j-doc-nav__link.is-active{color:#06c;background:#e7f1fa}.j-doc-nav__list-item>.j-doc-nav__link,.j-doc-nav__list-item>details>.j-doc-nav__children-toggle{font-size:1rem;color:#6a6e73;font-weight:700}.j-doc-nav__list-item>.j-doc-nav__link:focus,.j-doc-nav__list-item>.j-doc-nav__link:hover,.j-doc-nav__list-item>details>.j-doc-nav__children-toggle:focus,.j-doc-nav__list-item>details>.j-doc-nav__children-toggle:hover{color:#151515}@media (min-width:1000px){.j-doc-nav__list-item>.j-doc-nav__link.is-active,.j-doc-nav__list-item>.j-doc-nav__link.is-active:focus,.j-doc-nav__list-item>.j-doc-nav__link.is-active:hover{color:#06c;background:#e7f1fa}}.j-doc-nav__children-toggle{overflow:hidden}.j-doc-nav__children-toggle__collapse-text,.j-doc-nav__section[open]>.j-doc-nav__children-toggle>.j-doc-nav__children-toggle__expand-text{display:none}.j-doc-nav__section[open]>.j-doc-nav__children-toggle>.j-doc-nav__children-toggle__collapse-text{display:block}.j-doc-nav__link{margin-inline:-1em;padding-inline:1em;border-radius:0 .625rem .625rem 0}.j-doc-nav__link:focus,.j-doc-nav__link:hover{text-decoration:none;background:#dedede}.j-doc-nav__link--has-children{min-height:2.5rem;margin-right:1.5625rem}.j-doc-nav__children-toggle[class][class]{position:relative;display:block;list-style:none;list-style-type:none;transition:background .25s;cursor:pointer}.j-doc-nav__children-toggle[class][class]::-webkit-details-marker{display:none}.j-doc-nav__section--use-small-toggle>.j-doc-nav__children-toggle[class][class]{position:absolute;top:0;left:calc(100% - 1.25rem);z-index:1;display:block;width:2.5rem;height:2.5rem}.j-doc-nav__children-toggle[class][class]:before{content:"";position:absolute;top:50%;right:0;display:block;width:.375rem;height:.375rem;border:.125rem solid #6a6e73;border-bottom:0;border-left:0;transform:translate(-.1875rem) rotate(45deg);transform-origin:right top}.j-doc-nav__section--use-small-toggle>.j-doc-nav__children-toggle[class][class]:before{right:auto;left:50%}.j-doc-nav__children-wrapper[open]>.j-doc-nav__children-toggle[class][class]:before,.j-doc-nav__section[open]>.j-doc-nav__children-toggle[class][class]:before{transform:translate(-.375rem,-.1875rem) rotate(-45deg);transform-origin:right top}.j-doc-nav__section--use-small-toggle>.j-doc-nav__children-toggle[class][class]:focus,.j-doc-nav__section--use-small-toggle>.j-doc-nav__children-toggle[class][class]:hover{background:#eee}.j-doc-nav__children-toggle[class][class]:focus:before,.j-doc-nav__children-toggle[class][class]:hover:before{border-color:#06c}.j-doc-nav__children-wrapper[open],.j-doc-nav__section[open]{margin-bottom:1.5rem}.j-doc-nav__subnav[class]{padding-left:.5rem}.j-superdoc-subnav__item{position:relative}.j-options-container--mobile{position:absolute;top:3.25rem;z-index:0;width:100%;height:0;background:#fff}@media (min-width:1000px){.j-options-container--mobile{display:none}}.j-has-opened-doc-menu--toc .j-options-container--mobile,.j-options-container--mobile .j-sidebar__menu-trigger__close-text{display:none}.j-options-container--mobile[open]{z-index:10;width:100%;height:auto;background:#fff}.j-options-container--mobile[open]:before{content:"";position:absolute;bottom:0;left:0;z-index:-2;width:100%;height:50%;box-shadow:0 .3125rem 1.0625rem 0 rgba(0,0,0,.15)}.j-options-container--mobile[open]:after{content:"";position:absolute;top:0;right:0;bottom:0;left:0;z-index:-1;background:#fff}.j-options-container--mobile[open] .j-sidebar__menu-trigger__close-text{display:flex;align-items:center}.j-sidebar__menu-trigger--options{position:absolute;top:-3.25rem;right:0;padding:1rem}.j-options-container--mobile[open] .j-sidebar__menu-trigger--options{width:100%}.j-options-container--mobile[open] .j-sidebar__menu-trigger--options:before,.j-sidebar__menu-trigger__open-headline{display:none}.j-options-container--mobile[open] .j-sidebar__menu-trigger__open-headline{display:flex;color:#757575}.j-doc__doc-options{position:relative;width:100%;font-size:.875rem}@media (min-width:1400px){.j-doc__doc-options{width:auto}}.j-doc__doc-options details{position:absolute;left:0;width:100%;padding:0 1.5625rem;background-color:#fff;box-shadow:0 .625rem .625rem 0 rgba(0,0,0,.25)}@media (min-width:1400px){.j-doc__doc-options details{box-shadow:none}}@media (min-width:1400px){.j-doc__doc-options{margin-left:3.75rem;border-top:.0625rem solid #efefef}.j-doc__doc-options details{position:relative;padding:0}}.j-doc__tertiary-sidebar__inner .j-doc__doc-options{display:none}@media (min-width:1000px){.j-doc__tertiary-sidebar__inner .j-doc__doc-options{display:block}}.j-doc-options__item{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between;padding-bottom:.875rem}.j-doc-options__item:first-of-type{padding-top:.875rem}@media (min-width:1000px){.j-doc-options__item{flex-direction:column}}.j-doc-options__item select{flex:0 1 auto;width:80%;padding:.375rem .5rem;box-shadow:inset 0 -.0625rem 0 #8a8d90,inset .0625rem 0 0 #f0f0f0,inset 0 .0625rem 0 #f0f0f0,inset -.0625rem 0 0 #f0f0f0}@media (min-width:1000px){.j-doc-options__item select{width:100%}}.j-doc-option__label--only-one-language{margin-bottom:.75rem}.j-languages__current-langauge{display:flex;flex:0 1 auto;align-items:center;width:80%;padding:.375rem .5rem;font-size:1rem;background-color:#f0f0f0;box-shadow:inset 0 -.0625rem 0 #8a8d90,inset .0625rem 0 0 #e0e0e0,inset 0 .0625rem 0 #e0e0e0,inset -.0625rem 0 0 #e0e0e0}@media (min-width:1000px){.j-languages__current-langauge{width:100%}}.j-doc-options__list{margin:0 0 1.5rem;padding:0}.j-options-container--mobile .j-doc-options__list{padding:0 1.5625rem}.j-options-container--desktop .j-doc-options__list{visibility:hidden;height:0;-webkit-animation:reveal-dropdowns .1618s 4s 1 forwards;animation:reveal-dropdowns .1618s 4s 1 forwards}@media (min-width:1400px){.j-options-container--desktop .j-doc-options__list{visibility:visible;height:auto;max-height:auto;-webkit-animation:none;animation:none}}.j-options-container--desktop--processed .j-doc-options__list{visibility:visible;height:auto;max-height:auto;-webkit-animation:none;animation:none}.j-doc-option__label{display:flex;align-items:center;margin-bottom:.75rem;padding-top:.5rem;font-size:1rem;line-height:1.4;font-weight:400}@supports ((-webkit-mask-image:url("#")) or (mask-image:url("#"))){.j-doc-option__label:before{content:"";display:block;width:1.875rem;height:1.875rem;margin-right:.5em;background:currentcolor;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-position:center center;mask-position:center center;-webkit-mask-size:auto 100%;mask-size:auto 100%}}@supports ((-webkit-mask-image:url("#")) or (mask-image:url("#"))){.j-doc-option__label--language:before{-webkit-mask-image:url(/docs-fed-assets/dist/jupumbra/images/language.svg);mask-image:url(/docs-fed-assets/dist/jupumbra/images/language.svg)}}@supports ((-webkit-mask-image:url("#")) or (mask-image:url("#"))){.j-doc-option__label--format:before{-webkit-mask-image:url(/docs-fed-assets/dist/jupumbra/images/document.svg);mask-image:url(/docs-fed-assets/dist/jupumbra/images/document.svg)}}.j-sidebar__menu-details-container{display:flex;max-inline-size:18.75rem;margin:0 auto 1.5rem}.j-sidebar__menu-details-button{flex:1 1 auto;width:45%;padding:0 .5rem;border:.0625rem solid var(--jupiter__palette__gray--80,#d2d2d2);background-color:#fff}.j-sidebar__menu-details-button:focus,.j-sidebar__menu-details-button:hover{border-color:var(--jupiter__palette__blue--40,#06c);background-color:#e7f1fa}.j-sidebar__menu-details-button--expand{border-radius:.1875rem 0 0 .1875rem}.j-sidebar__menu-details-button--collapse{border-radius:0 .1875rem .1875rem 0}body,html{height:auto;min-height:100%}.container .pvof-doc__content-wrapper__outer--css-not-removed{width:calc(100vw - 3.125rem)}@media (min-width:48rem){.container .pvof-doc__content-wrapper__outer--css-not-removed{margin-left:calc(-50vw - -23.4375rem)}}@media (min-width:62rem){.container .pvof-doc__content-wrapper__outer--css-not-removed{margin-left:calc(-50vw - -30.3125rem)}}@media (min-width:75rem){.container .pvof-doc__content-wrapper__outer--css-not-removed{margin-left:calc(-50vw - -36.5625rem)}}pfe-page-status{z-index:100}.pvof-doc__content-wrapper__outer--css-not-removed .doc-wrapper{float:none;width:auto;padding:0}.pvof-doc__tertiary-sidebar__inner{display:flex;flex-direction:column}@media (min-width:1400px){.pvof-doc__tertiary-sidebar__inner{padding-bottom:2.5rem}}.pvof-doc__wrapper .book>.titlepage,.pvof-doc__wrapper .chapter,.pvof-doc__wrapper section[id]{padding-bottom:3.75rem}.pvof-doc__wrapper .book>.titlepage .chapter:last-child,.pvof-doc__wrapper .book>.titlepage section[id]:last-child,.pvof-doc__wrapper .chapter .chapter:last-child,.pvof-doc__wrapper .chapter section[id]:last-child,.pvof-doc__wrapper section[id] .chapter:last-child,.pvof-doc__wrapper section[id] section[id]:last-child{margin-bottom:-3.75rem}.pvof-doc__wrapper .cta-link{font-size:inherit}.pvof-doc__wrapper a{word-wrap:break-word;overflow-wrap:break-word}.pvof-doc__wrapper .warning .admonition{margin:0;padding:0;border:0;color:inherit;background:transparent}.pvof-doc__wrapper .warning .admonition:before{content:none}.j-has-opened-doc-menu .QSIPopOver,.j-has-opened-doc-menu .QSISlider,.rh-table--is-full-screen .QSIPopOver,.rh-table--is-full-screen .QSISlider{z-index:0!important}.QSIPopOver{top:auto!important;bottom:18.75rem!important}.alert{position:relative}button.dismiss-button{position:absolute;top:50%;right:.3125rem;z-index:50;width:2.5rem;height:2.5rem;margin-top:-1.25rem;padding:0;border:0;text-align:center;background:none;cursor:pointer}button.dismiss-button:after{content:"\f109";display:inline-block;opacity:.3;filter:alpha(opacity=30);font-size:1.3125rem;line-height:1;line-height:2.5rem;font-family:rh-web-iconfont;font-weight:400;font-style:normal;font-variant:normal;text-decoration:inherit;text-transform:none!important;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-smoothing:antialiased}#to-top a{position:fixed;right:0;bottom:.9375rem;z-index:99999;width:2.75rem;height:2.75rem;padding:.625rem;opacity:0;font-size:1.5rem;line-height:1.5rem;color:#fff;vertical-align:middle;text-decoration:none;background-color:#333;background-color:rgba(0,0,0,.8);transition:opacity .218s;cursor:pointer}#to-top a.affix{opacity:.8}#to-top a.affix:focus,#to-top a.affix:hover{opacity:1}.alert{border:0;border-radius:0}.alert>h2:first-child,.alert>h3:first-child,.alert>h4:first-child,.alert>h5:first-child,.alert>h6:first-child,.alert>p:first-child{margin-top:0!important}.alert>p:last-child{margin-bottom:0!important}.alert-w-icon[class]{padding-left:2.8125rem}.alert-w-icon .alert-icon{float:left;margin-right:.625rem;margin-left:-1.875rem;font-size:1.125rem}.alert-w-icon .alert-icon[class*=" rh-icon-"],.alert-w-icon .alert-icon[class^=rh-icon-]{margin-top:-.375rem;margin-left:-2.5rem;font-size:2.25rem;line-height:1em}.alert-w-icon .alert-icon[class*=" icon-innov-prev"],.alert-w-icon .alert-icon[class^=icon-innov-prev]{margin-top:.25rem;font-size:1.3125rem}.alert-w-icon.alert-plain{padding-left:5rem;color:#252525;background:none}.alert-w-icon.alert-plain .alert-icon{margin-right:0;margin-left:-4.375rem;font-size:3rem}.alert-w-icon.alert-plain.alert-success .alert-icon{color:#3f9c35}.alert-w-icon.alert-plain.alert-info .alert-icon{color:#0088ce}.alert-w-icon.alert-plain.alert-warning .alert-icon{color:#f0ab00}.alert-w-icon.alert-plain.alert-danger .alert-icon{color:#e00}#target_banner .copy-url{float:right;margin-top:0}#target_banner .dropdown-menu{font-size:inherit}.titlepage .svg-img[data*="title_logo.svg"]{width:15rem;margin:1.5rem 0}.guibutton{padding:.1875rem;font-size:90%;font-weight:700}.guibutton:before{content:"["}.guibutton:after{content:"]"}.para{margin:1.49963rem 0}.para[class]{margin-bottom:1.49963rem}.pvof-doc__wrapper dd{margin-bottom:2.5rem}.card-light,.card-light-gray,.card-light-grey{border:.0625rem solid #f0f0f0;color:#252525;background:#f0f0f0}.pvof-doc__wrapper .card-light-gray.push-bottom:first-child,.pvof-doc__wrapper .card-light-grey.push-bottom:first-child,.pvof-doc__wrapper .card-light.push-bottom:first-child{margin-bottom:3.125rem!important}.card-light-gray a.card-link,.card-light-gray h1,.card-light-gray h2,.card-light-gray h3,.card-light-gray h4,.card-light-gray h5,.card-light-gray h6,.card-light-grey a.card-link,.card-light-grey h1,.card-light-grey h2,.card-light-grey h3,.card-light-grey h4,.card-light-grey h5,.card-light-grey h6,.card-light a.card-link,.card-light h1,.card-light h2,.card-light h3,.card-light h4,.card-light h5,.card-light h6{color:#252525}.card-light-gray.card-active:after,.card-light-grey.card-active:after,.card-light.card-active:after{border-top-color:#f0f0f0}.card-md,.card-narrow{display:block;padding:1.1875rem;white-space:normal;word-wrap:break-word}.card-sm .card .card-heading,.card .card-heading.card-heading-sm{font-size:1.0625em;line-height:1.5;font-weight:500}.card .card-heading.card-heading-flush{margin-bottom:.25rem}.card .card-heading.card-heading-red{color:#e00}.card>p{margin-top:0}.card>p:last-child{margin-bottom:0}.new-experience{position:relative;z-index:1;margin:1.5rem;padding:1.5rem;border:.0625rem solid #bee1f4;font-size:1rem;background-color:#e7f1fa}@media (min-width:48rem){.new-experience{display:flex}}@media (min-width:48rem){.new-experience--contained{position:relative;left:50%;width:calc(100vw - 2.5rem);transform:translateX(-50%)}}.new-experience__primary-content{flex-grow:1}@media (min-width:48rem){.new-experience__primary-content{margin-right:1.25rem}}.new-experience__title{margin:0;padding:0;font-size:inherit;line-height:1.6;font-weight:inherit}.new-experience__title+a,.new-experience__title+pfe-cta{display:inline-block;margin-top:1.5em}.new-experience__secondary-content{min-width:12.5rem}@media (min-width:48rem){.new-experience__secondary-content{text-align:right}}.pvof-doc__wrapper .example{margin-bottom:2rem;padding:1rem 0 1rem 1rem;border-left:.3125rem solid #ccc}dl.calloutlist[class]{display:grid;grid-template-columns:-webkit-min-content 1fr;grid-template-columns:min-content 1fr;gap:1.25em .75em}dl.calloutlist[class] dt{float:none;margin:0;padding:0}dl.calloutlist[class] dd{margin:0;padding:0}dl.calloutlist[class] dd .para:last-child{margin:0}.toast{position:fixed;right:.9375rem;bottom:.9375rem;left:.9375rem;z-index:999;min-width:6.25rem;max-width:32.8125rem;padding:.9375rem;color:#fff;background-color:#000;background-color:rgba(0,0,0,.9);box-shadow:0 .125rem .3125rem 0 rgba(0,0,0,.26);transition:transform .2s cubic-bezier(.465,.183,.153,.946);transform:translate3d(0,150%,0);will-change:transform}.toast.show{transform:translateZ(0)}.toast a{color:#fff;text-decoration:underline}.toast a:focus,.toast a:hover{color:#2b9af3}.toast a.btn{text-decoration:none}.toast .btn.btn-link{color:#fff}.toast .close{opacity:.3;color:#fff;text-decoration:none}.toast .close:focus,.toast .close:hover{opacity:.5;color:#fff}.no-csstransforms3d.csstransitions .toast{transition:all .2s cubic-bezier(.465,.183,.153,.946)}.no-csstransforms3d .toast{visibility:hidden;opacity:0}.no-csstransforms3d .toast.show{visibility:visible;opacity:1}.annotator-outer[class][class]{position:static;display:none;flex-direction:column;flex-grow:1;width:auto;height:auto;margin:0}@media (min-width:1400px){.annotator-outer[class][class]{display:flex}}.annotator-frame[class] *{height:auto}@media (min-width:1400px){.annotator-frame .h-sidebar-iframe[class]{position:static;width:calc(100% + 1.5rem)}}.annotator-toolbar[class][class]{position:static;width:auto}.annotator-toolbar>ul,.annotator-toolbar>ul>li{display:block;width:auto;height:auto;margin:0;padding:0;list-style:none}.annotator-toolbar>ul>li{display:flex;justify-content:flex-end}.annotator-frame[class] .annotator-frame-button--sidebar_toggle,.annotator-outer .annotator-frame-button[class][class],.app-content-wrapper *{font-family:RedHatText,Red Hat Text,Helvetica Neue,Arial,sans-serif!important}.annotator-outer .annotator-frame-button[class][class]{position:static;height:auto;margin-right:1.875rem;padding:.75em 1em;font-size:.9375rem;line-height:1.333;font-weight:500}@media (min-width:1400px){.annotator-outer .annotator-frame-button[class][class]{margin-right:0}}.annotator-outer iframe{flex-grow:1;margin-bottom:1.25rem}@media (min-width:1400px){.annotator-outer iframe{min-height:37.5rem}}.producttitle{font-size:1.25rem;color:#000;text-transform:uppercase}.producttitle .productnumber{color:var(--jupiter__palette__red--50,#e00)}.cp-modal-open,.zoom-open{overflow:hidden}.cp-modal,.cp-video-modal,.zoom-modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;z-index:1050;display:none;overflow:hidden;opacity:0;filter:alpha(opacity=0);outline:0;transition:all .2s cubic-bezier(.465,.183,.153,.946);-webkit-overflow-scrolling:touch}.in.cp-modal,.in.cp-video-modal,.in.zoom-modal{display:block;overflow-x:hidden;overflow-y:auto;opacity:1;filter:alpha(opacity=100)}.cp-modal .close,.cp-video-modal .close,.zoom-modal .close{position:absolute;top:0;right:-.5rem;width:28px;width:1.75rem;height:28px;height:1.75rem;margin-top:0;margin-bottom:.375rem;opacity:.9;border-radius:50%;font-size:1.75rem;line-height:1.75rem;color:#1a1a1a;text-shadow:none;background-color:#fff}.cp-modal .close:after,.cp-video-modal .close:after,.zoom-modal .close:after{line-height:1.75rem}.cp-modal-wrap,.zoom-wrap{position:relative;margin:.625rem;padding-top:.5rem}@media (min-width:48rem){.cp-modal-wrap,.zoom-wrap{width:38.4375rem;margin:2.8125rem auto}}@media (min-width:62rem){.cp-modal-wrap,.zoom-wrap{width:49.8958rem}}@media (min-width:75rem){.cp-modal-wrap,.zoom-wrap{width:60.3125rem}}.cp-modal-body :last-child{margin-bottom:0}.cp-modal-backdrop,.zoom-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;display:none;opacity:0;filter:alpha(opacity=0);background-color:#000;transition:opacity .2s cubic-bezier(.465,.183,.153,.946)}.in.cp-modal-backdrop,.in.zoom-backdrop{display:block;opacity:.8;filter:alpha(opacity=80)}.cp-modal-body{padding:1.875rem;background:#fff}.cp-modal[data-cp-modal-video=true] .cp-modal-body,.cp-video-modal .cp-modal-body{padding:0}[data-action=zoom]{position:relative}[data-action=zoom]:after{position:absolute;right:0;bottom:0;display:inline-block;padding:.375rem;line-height:1;font-family:rh-web-iconfont;color:#fff;font-weight:400;font-style:normal;font-variant:normal;text-decoration:inherit;text-decoration:none!important;text-transform:none!important;background:rgba(0,0,0,.4);text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-smoothing:antialiased}[data-action=zoom]:focus:after,[data-action=zoom]:hover:after{background:rgba(0,0,0,.9)}.zoom-wrap .zoom-larger{text-align:center}.zoom-wrap .zoom-larger a{color:#fff}.zoom-wrap .zoom-larger a:focus,.zoom-wrap .zoom-larger a:hover{color:#fff;text-decoration:underline}.zoom-wrap .zoom-larger a:after{content:"⿻";display:inline-block;margin-left:.25rem}.zoom-body{margin:0 0 1rem;padding:1rem;border-radius:.5rem;text-align:center;background:#fff}.zoom-body .video-wrapper{position:relative;overflow:hidden;height:0;padding-bottom:56.25%}.zoom-body .video-wrapper[data-aspect-ratio="4:3"]{padding-bottom:75%}.zoom-body iframe{position:absolute;top:0;left:0;width:100%;height:100%}.para>.title[class],p.title[class]{margin:1.25rem 0 0;font-size:1rem;line-height:1.6667;font-weight:700;font-style:normal;text-transform:none}.para>.title[class]+.content>:first-child,.para>.title[class]+p,p.title[class]+.content>:first-child,p.title[class]+p{margin-top:0}.pvof-doc__wrapper[class] pre:after{content:none}.pvof-doc__wrapper[class] pre .caution,.pvof-doc__wrapper[class] pre .important,.pvof-doc__wrapper[class] pre .note,.pvof-doc__wrapper[class] pre .tip,.pvof-doc__wrapper[class] pre .warning{margin:0;padding:0;border:0;font:inherit;color:inherit;background:transparent}.pvof-doc__wrapper[class] pre .caution:after,.pvof-doc__wrapper[class] pre .important:after,.pvof-doc__wrapper[class] pre .note:after,.pvof-doc__wrapper[class] pre .tip:after,.pvof-doc__wrapper[class] pre .warning:after{content:none}.pvof-doc__wrapper[class] code.email{padding:0;font:inherit;background-color:transparent}.pvof-doc__wrapper[class] .author{margin-bottom:1.5rem}.pvof-doc__wrapper[class] .author .author{margin-bottom:0}table{margin:2rem 0}.pvof-doc__wrapper table{width:auto}table .table-contents table{overflow:auto;max-width:100%}rh-table table{overflow:visible;max-width:9999em;margin:0}.pvof-doc__wrapper td,.pvof-doc__wrapper th{padding:.5em 1rem;border-left:0;transition:background .25s ease-out}.pvof-doc__wrapper thead th{padding-top:1.5em}.pvof-doc__wrapper caption{margin-top:.5rem;margin-bottom:.5rem;color:currentColor;color:var(--pfe-table__caption--Color,currentColor);font-weight:700;text-align:center}.pvof-doc__wrapper .revhistory table td,.pvof-doc__wrapper .revhistory table th{border-color:transparent}.pvof-doc__wrapper .revhistory table td{padding:.625rem .875rem}.pvof-doc__wrapper .revhistory table.simplelist{margin:0}@media print{#masthead{display:none!important}}.main-content[class]{padding-top:0;padding-bottom:0}@media (min-width:1000px){.j-superdoc{display:grid;grid-template-rows:-webkit-min-content 1fr;grid-template-rows:min-content 1fr;grid-template-columns:repeat(12,minmax(0,1fr));gap:0 1.5rem;padding:0 1.5rem}}.j-superdoc__nav{position:-webkit-sticky;position:sticky;top:0;box-shadow:0 .3125rem 1.0625rem 0 rgba(0,0,0,.15)}@media (min-width:1000px){.j-superdoc__nav{position:static;grid-row:1/span 2;grid-column:1/span 4;border:0;box-shadow:.1875rem 0 .1875rem 0 rgba(0,0,0,.08)}}@media (min-width:1400px){.j-superdoc__nav{grid-column:1/span 3}}@media (min-width:1000px){.j-reading-mode--enabled .j-superdoc__nav{overflow:hidden;width:0}}@media (min-width:1000px){.j-reading-mode--animation-complete .j-superdoc__nav{visibility:hidden}}@media print{.j-superdoc__nav{display:none!important}}.j-superdoc__product-title{display:flex}.j-superdoc__product-title__name{display:inline-block;margin-right:1rem}.j-superdoc__product-title__version{display:inline-block;color:#d0021b}.rhdocs__header .rhdocs-content-type,.rhdocs__header .rhdocs__header__secondary-wrapper{display:none}.j-superdoc__content-wrapper{left:0;max-width:45.8125rem;margin-top:3.9375rem;margin-right:auto;margin-left:auto;padding-right:1.5rem;padding-bottom:2.5rem;padding-left:1.5rem;transition:left .25s ease}@media (min-width:1000px){.j-superdoc__content-wrapper{justify-self:center;grid-row:2;grid-column:5/-1;max-width:100%;padding-right:0;padding-left:0}}@media (min-width:1400px){.j-superdoc__content-wrapper{grid-row:1;grid-column:4/11;max-width:42.8125rem}}@media print{.j-superdoc__content-wrapper{grid-column:1/-1!important;width:100%!important;margin-right:auto!important;margin-left:auto!important}}@media (min-width:1000px){.j-reading-mode--enabled .j-superdoc__content-wrapper{position:relative;left:calc(-16.66667vw - -.75rem - var(--scrollbarWidth, 40px)/12*4/-2)}}@media (min-width:1400px){.j-reading-mode--enabled .j-superdoc__content-wrapper{left:calc(-12.5vw - -.75rem - var(--scrollbarWidth, 40px)/12*3/-2)}}.j-doc__tertiary-sidebar{padding:.5em 0;background:#fff;transition:box-shadow .25s ease}@media (min-width:1000px){.j-doc__tertiary-sidebar{position:-webkit-sticky;position:sticky;top:-.0625rem;z-index:1;grid-row:1;grid-column:5/-1;margin:0 -1.5rem}}@media (min-width:1200px){.j-doc__tertiary-sidebar{grid-column:5/-1}}@media (min-width:1400px){.j-doc__tertiary-sidebar{position:static;display:block;grid-column:-3/-1;width:auto;height:auto;margin:3.9375rem 0 0;padding:0;transition:none}}@media print{.j-doc__tertiary-sidebar{display:none!important}}@media (min-width:1000px){.j-doc__tertiary-sidebar--sticky{z-index:5;background:#fff;box-shadow:.1875rem 0 .1875rem 0 rgba(0,0,0,.25)}}@media (min-width:1000px) and (min-width:1400px){.j-doc__tertiary-sidebar--sticky{position:static;box-shadow:none}}@media (min-width:1000px){.j-reading-mode--enabled .j-doc__tertiary-sidebar--sticky{grid-column:1/-1}}@media (min-width:1400px){.j-reading-mode--enabled .j-doc__tertiary-sidebar--sticky{grid-column:-3/-1}}@media (min-width:1200px){.j-doc__tertiary-sidebar__inner{position:-webkit-sticky;position:sticky;top:2.5rem}}@media (min-width:1400px){.j-doc__tertiary-sidebar__inner{max-width:9999em;margin:0}}.rh-table--is-full-screen #to-top{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
